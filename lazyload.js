function a(){var e="loading"in HTMLImageElement.prototype,t=e=>{const t=e.dataset.src;if(t){if("PICTURE"===e.parentNode.tagName){const t=e.parentNode.querySelectorAll("source");for(const e of t)e.dataset.srcset&&(e.srcset=e.dataset.srcset,e.removeAttribute("data-srcset"))}e.src=t,e.removeAttribute("data-src"),e.dataset.srcset&&(e.srcset=e.dataset.srcset,e.removeAttribute("data-srcset")),e.classList.add("loaded")}},s=e=>{const t=e.dataset.src;t&&(e.src=t,e.removeAttribute("data-src"),e.classList.add("loaded"))},r=document.querySelectorAll("img[data-src]");for(const s of r)if(e)s.loading="lazy",t(s);else{var o=new IntersectionObserver((e=>{for(const r of e)r.isIntersecting&&(t(s),o.unobserve(s))}),{rootMargin:"50px"});o.observe(s)}var a=document.querySelectorAll("iframe[data-src]");for(const t of a)if(e)t.loading="lazy",s(t);else{const e=new IntersectionObserver((r=>{for(const o of r)o.isIntersecting&&(s(t),e.unobserve(t))}),{rootMargin:"200px"});e.observe(t)}if("contentVisibility"in document.documentElement.style){var n=document.querySelectorAll("section:not(.hero)");for(const e of n)e.style.contentVisibility="auto",e.style.containIntrinsicSize="1px 5000px"}}export{a as lazyLoadMedia};