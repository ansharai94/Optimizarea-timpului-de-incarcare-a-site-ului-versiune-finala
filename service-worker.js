const CACHE_NAME="epic-media-cache-v1";const OFFLINE_URL="offline.html";const PRECACHE_ASSETS=["/","/index.html","/offline.html","/styles.css","/main.js","/app.js","/critical.js","/assets/img/innovation-360.webp","/assets/img/innovation-360.webp","/assets/img/innovation-720.webp 1280w","/assets/img/innovation-1080.webp","/assets/img/logo.svg","/assets/img/landscape-360.webp","/assets/img/landscape-720.webp","/assets/img/landscape-1024.webp","/assets/img/landscape-1400.webp","/assets/img/landscape-2800.webp","/assets/img/landscape-1024.webp","/assets/img/landscape2-360.webp","/assets/img/landscape2-720.webp","/assets/img/landscape2-1024.webp","/assets/img/landscape2-1400.webp","/assets/img/landscape2-2800.webp","/assets/img/landscape3-360.webp","/assets/img/landscape3-720.webp","/assets/img/landscape3-1024.webp","/assets/img/landscape3-1400.webp","/assets/img/landscape3-2800.webp","/assets/img/landscape4-360.webp","/assets/img/landscape4-720.webp","/assets/img/landscape4-1024.webp","/assets/img/landscape4-1400.webp","/assets/img/landscape4-2800.webp","/assets/img/landscape5-360.webp","/assets/img/landscape5-720.webp","/assets/img/landscape5-1024.webp","/assets/img/landscape5-1400.webp","/assets/img/landscape5-2800.webp","/assets/img/landscape5-1024.webp","/assets/img/innovation-80.webp","/assets/img/innovation-360.webp","/assets/img/innovation-720.webp","/assets/img/innovation-360.webp,","/assets/img/integration-80.webp","/assets/img/integration-360.webp","/assets/img/integration-720.webp","/assets/img/integration-360.webp","/assets/img/support-80.webp","/assets/img/support-360.webp","/assets/img/support-720.webp","/assets/img/support-360.webp","/assets/img/people2-50.webp","/assets/img/people2-360.webp","/assets/img/people2-720.webp","/assets/img/people2-360.webp","/assets/img/people1-50.webp","/assets/img/people1-360.webp","/assets/img/people1-720.webp","/assets/img/people1-360.webp","/assets/img/logo.svg","/assets/img/logo72.png","/assets/img/logo96.png","/assets/img/logo128.png","/assets/img/logo144.png","/assets/img/logo152.png","/assets/img/logo192.png","/assets/img/logo384.png","/assets/img/logo512.png","assets/img/screenshot1-1280.png","assets/img/screenshot2-1280.png",];self.addEventListener("install",(event)=>{event.waitUntil(caches.open(CACHE_NAME).then((cache)=>{console.log("Opened cache");return cache.addAll(PRECACHE_ASSETS)}).then(()=>self.skipWaiting()))});self.addEventListener("activate",(event)=>{const cacheWhitelist=[CACHE_NAME];event.waitUntil(caches.keys().then((cacheNames)=>{return Promise.all(cacheNames.map((cacheName)=>{if(cacheWhitelist.indexOf(cacheName)===-1){return caches.delete(cacheName)}}))}).then(()=>self.clients.claim()))});self.addEventListener("fetch",(event)=>{if(!event.request.url.startsWith(self.location.origin)){return}
if(event.request.mode==="navigate"){event.respondWith(fetch(event.request).catch(()=>{return caches.match(OFFLINE_URL)}));return}
event.respondWith(caches.match(event.request).then((cachedResponse)=>{const fetchPromise=fetch(event.request).then((networkResponse)=>{if(networkResponse&&networkResponse.status===200&&networkResponse.type==="basic"){const responseToCache=networkResponse.clone();caches.open(CACHE_NAME).then((cache)=>{cache.put(event.request,responseToCache)})}
return networkResponse}).catch((error)=>{console.log("Fetch failed; returning offline page instead.",error);if(event.request.mode==="navigate"){return caches.match(OFFLINE_URL)}
throw error});return cachedResponse||fetchPromise}))});self.addEventListener("sync",(event)=>{if(event.tag==="contact-form-sync"){event.waitUntil(syncContactForms())}});self.addEventListener("push",(event)=>{const data=event.data.json();const options={body:data.body,icon:"/icons/icon-192x192.png",badge:"/icons/badge-icon.png",vibrate:[100,50,100],data:{url:data.url||"/",},};event.waitUntil(self.registration.showNotification(data.title,options))});self.addEventListener("notificationclick",(event)=>{event.notification.close();event.waitUntil(clients.openWindow(event.notification.data.url))});async function syncContactForms(){try{const db=await openDB();const offlineForms=await db.getAll("offlineForms");for(const form of offlineForms){try{const response=await fetch("/api/contact",{method:"POST",headers:{"Content-Type":"application/json",},body:JSON.stringify(form),});if(response.ok){await db.delete("offlineForms",form.id)}}catch(error){console.error("Failed to sync form:",error)}}}catch(error){console.error("Error syncing offline forms:",error)}}
function openDB(){return new Promise((resolve,reject)=>{const request=indexedDB.open("epicMediaDB",1);request.onupgradeneeded=(event)=>{const db=event.target.result;if(!db.objectStoreNames.contains("offlineForms")){db.createObjectStore("offlineForms",{keyPath:"id",autoIncrement:!0,})}};request.onsuccess=(event)=>resolve(event.target.result);request.onerror=(event)=>reject(event.target.error)})}