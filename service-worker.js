const CACHE_NAME="epic-media-cache-v1",OFFLINE_URL="offline.html",CRITICAL_ASSETS=["/","/index.html","/offline.html","/critical.css","/critical.js","/assets/img/logo.xml","/assets/img/landscape-1024.webp","/assets/img/landscape-1400.webp","/assets/img/landscape-2800.webp","/assets/img/landscape2-360.webp","/assets/img/landscape2-720.webp","/assets/img/landscape2-1024.webp","/assets/img/logo-192.png"],SECONDARY_ASSETS=["/styles.css","/main.js","/app.js","/assets/img/innovation-360.webp","/assets/img/innovation-1024.webp","/assets/img/landscape3-360.webp","/assets/img/landscape3-720.webp","/assets/img/landscape3-1024.webp","/assets/img/landscape3-1400.webp","/assets/img/landscape3-2800.webp","/assets/img/landscape4-360.webp","/assets/img/landscape4-720.webp","/assets/img/landscape4-1024.webp","/assets/img/landscape4-1400.webp","/assets/img/landscape4-2800.webp","/assets/img/landscape5-360.webp","/assets/img/landscape5-720.webp","/assets/img/landscape5-1024.webp","/assets/img/landscape5-1400.webp","/assets/img/landscape5-2800.webp","/assets/img/innovation-80.webp","/assets/img/innovation-360.webp","/assets/img/innovation-720.webp","/assets/img/innovation-360.webp","/assets/img/integration-80.webp","/assets/img/integration-360.webp","/assets/img/integration-720.webp","/assets/img/integration-360.webp","/assets/img/support-80.webp","/assets/img/support-360.webp","/assets/img/support-720.webp","/assets/img/support-360.webp","/assets/img/people2-50.webp","/assets/img/people2-360.webp","/assets/img/people2-720.webp","/assets/img/people1-50.webp","/assets/img/people1-360.webp","/assets/img/people1-720.webp","/assets/img/logo.svg","/assets/img/logo-72.png","/assets/img/logo-96.png","/assets/img/logo-128.png","/assets/img/logo-144.png","/assets/img/logo-152.png","/assets/img/logo-384.png","/assets/img/logo-512.png","assets/img/screenshot1-1280.png","assets/img/screenshot2-1280.png","/assets/img/landscape-360.webp","/assets/img/landscape-720.webp","/assets/img/landscape2-1400.webp","/assets/img/landscape2-2800.webp"];async function syncContactForms(){try{const e=await openDB(),s=(await e.getAll("offlineForms")).map((async s=>{try{return!!(await fetch("/api/contact",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)})).ok&&(await e.delete("offlineForms",s.id),!0)}catch(e){return console.error("Failed to sync form:",e),!1}}));return Promise.all(s)}catch(e){return console.error("Error syncing offline forms:",e),!1}}function openDB(){return new Promise(((e,s)=>{const t=indexedDB.open("epicMediaDB",1);t.onupgradeneeded=e=>{const s=e.target.result;s.objectStoreNames.contains("offlineForms")||s.createObjectStore("offlineForms",{keyPath:"id",autoIncrement:!0})},t.onsuccess=s=>e({getAll:e=>new Promise(((t,a)=>{const n=s.target.result.transaction(e,"readonly").objectStore(e).getAll();n.onsuccess=()=>t(n.result),n.onerror=()=>a(n.error)})),delete:(e,t)=>new Promise(((a,n)=>{const i=s.target.result.transaction(e,"readwrite").objectStore(e).delete(t);i.onsuccess=()=>a(),i.onerror=()=>n(i.error)}))}),t.onerror=e=>s(e.target.error)}))}self.addEventListener("install",(e=>{e.waitUntil(caches.open(CACHE_NAME).then((e=>e.addAll(CRITICAL_ASSETS).then((()=>self.skipWaiting())))))})),self.addEventListener("activate",(e=>{e.waitUntil(Promise.all([caches.keys().then((e=>Promise.all(e.map((e=>{if(e!==CACHE_NAME)return caches.delete(e)}))))),caches.open(CACHE_NAME).then((e=>e.addAll(SECONDARY_ASSETS))),self.clients.claim()]))})),self.addEventListener("fetch",(e=>{e.request.url.startsWith(self.location.origin)&&"GET"===e.request.method&&("navigate"!==e.request.mode?"image"!==e.request.destination?e.respondWith(caches.match(e.request).then((s=>{const t=fetch(e.request).then((s=>{if(s&&200===s.status){const t=s.clone();caches.open(CACHE_NAME).then((s=>s.put(e.request,t)))}return s})).catch((e=>{throw console.error("Fetch failed:",e),e}));return s||t}))):e.respondWith(caches.match(e.request).then((s=>s||fetch(e.request).then((s=>{if(s&&200===s.status){const t=s.clone();return caches.open(CACHE_NAME).then((s=>s.put(e.request,t))),s}return s})).catch((e=>(console.error("Image fetch failed:",e),new Response("Image not available",{status:404}))))))):e.respondWith(caches.match(e.request).then((s=>s?(fetch(e.request).then((s=>{s&&200===s.status&&caches.open(CACHE_NAME).then((t=>t.put(e.request,s)))})).catch((()=>{})),s):fetch(e.request).catch((()=>caches.match(OFFLINE_URL)))))))})),self.addEventListener("sync",(e=>{"contact-form-sync"===e.tag&&e.waitUntil(syncContactForms())})),self.addEventListener("push",(e=>{if(e.data)try{const s=e.data.json(),t={body:s.body,icon:"/icons/icon-192x192.png",badge:"/icons/badge-icon.png",vibrate:[100,50,100],data:{url:s.url||"/"}};e.waitUntil(self.registration.showNotification(s.title,t))}catch(e){console.error("Push notification error:",e)}})),self.addEventListener("notificationclick",(e=>{e.notification.close(),e.waitUntil(clients.matchAll({type:"window",includeUncontrolled:!0}).then((s=>{const t=e.notification.data.url;for(let e=0;e<s.length;e++){const a=s[e];if(a.url===t&&"focus"in a)return a.focus()}if(clients.openWindow)return clients.openWindow(t)})))}));