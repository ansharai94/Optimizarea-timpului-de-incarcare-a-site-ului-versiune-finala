export function setupFormSync(){const e=document.getElementById("contactForm");e&&e.addEventListener("submit",(async t=>{t.preventDefault();const r=new FormData(e),o=Object.fromEntries(r.entries());o.timestamp=(new Date).toISOString();try{if(navigator.onLine){if(!(await fetch("/api/contact",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)})).ok)throw new Error("Failed to send");alert("Mesaj trimis cu succes!"),e.reset()}else if(await storeFormData(o),alert("Sunteți offline. Mesajul va fi trimis automat."),e.reset(),"serviceWorker"in navigator&&"SyncManager"in window){const e=await navigator.serviceWorker.ready;await e.sync.register("contact-form-sync")}}catch(e){console.error("Eroare la trimitere:",e),alert("A apărut o eroare. Încercați mai târziu.")}}))}function storeFormData(e){return new Promise(((t,r)=>{const o=indexedDB.open("epicMediaDB",1);o.onupgradeneeded=e=>{const t=e.target.result;t.objectStoreNames.contains("offlineForms")||t.createObjectStore("offlineForms",{keyPath:"id",autoIncrement:!0})},o.onsuccess=o=>{const n=o.target.result.transaction("offlineForms","readwrite").objectStore("offlineForms");n.add(e).onsuccess=()=>t(),n.add(e).onerror=()=>r()},o.onerror=()=>r()}))}